####    Making a new pipeline using the console, but following the notes.yml template    ####

Console provides option to create a VPC 
*with* a new cluster. But if I make one
beforehand, how does it eventually link 
to the cluster?

Security group ingress and egress is 
a means of defining rules for inbound
and outbound requests

VPC ok
Subnets ok
but VPC and Subnets need to be connected to an Internet Gateway
- create internet gateway
- create connection

'Ref:' must appear on the line below, '!Ref:' does not 

listener MUST be defined
target IP addresses...?

CodeCommit can't be accessed with SSH by root user
Does logging in as an IAM with a bunch permissions 
    no.  


making a role for codedeploy should be easier than it is
Service and Load Balancer needs to be up before CodeDeploy 

IAM
- group is optional
- set a password manually an optionally make them create a new one each time
- arn:aws:iam::account-id:user/user-name-with-path

we making this, or multiple of these 
---
AWSTemplateFormatVersion: "version date"

Description:
  String

Metadata:
  # ignore

Parameters:
  set of parameters
  Values to pass to your template at runtime (when you create or update a stack).
  You can refer to parameters from the Resources and Outputs sections of the 
  template.

Mappings:
  set of mappings
  A mapping of keys and associated values that you can use to specify 
  conditional parameter values, similar to a lookup table. You can match
  a key to a corresponding value by using the Fn::FindInMap intrinsic 
  function in the Resources and Outputs sections.
  # i'm not sure what this is all aboot

Conditions:
  set of conditions
  Conditions that control whether certain resources are created or 
  whether certain resource properties are assigned a value during 
  stack creation or update. For example, you could conditionally create
  a resource that depends on whether the stack is for a production or 
  test environment.
  # I'm gonna leave this 

Transform:
  set of transforms

Resources:
  set of resources
  Specifies the stack resources and their properties, such as an Amazon 
  Elastic Compute Cloud instance or an Amazon Simple Storage Service bucket. 
  You can refer to resources in the Resources and Outputs sections of the 
  template.
        Resources:
          Logical ID:
            Type: Resource type
            Properties:
              Set of properties


Outputs:
  set of outputs
   
  Outputs:
  Logical ID:
    Description: Information about the value
    Value: Value to return
    Export:
      Name: Value to export
  # example
  Outputs:
  StackVPC:
    Description: The ID of the VPC
    Value: !Ref MyVPC
    Export:
      Name: !Sub "${AWS::StackName}-VPCID"
